package morphology;

import zemberek.core.turkish.PrimaryPos;
import zemberek.core.turkish.RootAttribute;
import zemberek.core.turkish.SecondaryPos;
import zemberek.morphology.lexicon.DictionaryItem;
import zemberek.morphology.parser.MorphParse;
import zemberek.morphology.parser.tr.TurkishWordParserGenerator;

import java.io.IOException;
import java.util.List;


public class AddNewDictionaryItem {

    TurkishWordParserGenerator parserGenerator;

    public AddNewDictionaryItem(TurkishWordParserGenerator parserGenerator) {
        this.parserGenerator = parserGenerator;
    }

    void addNewDictionaryItemTest(String input, DictionaryItem newItem) throws IOException {

        List<MorphParse> before = parserGenerator.parse(input);
        System.out.println("Parses for " + input + " before adding lemma :");
        printResults(before);

        // This must be called. So that parser forgets the old results. Due to a small bug,
        // parserGenerator.invalidateCache(input); does not work for proper nouns.
        parserGenerator.invalidateAllCache();

        parserGenerator.getGraph().addDictionaryItem(newItem);

        List<MorphParse> after = parserGenerator.parse(input);
        System.out.println("Parses for " + input + " after adding lemma :");
        printResults(after);
    }

    private void printResults(List<MorphParse> before) {
        int i = 1;
        for (MorphParse morphParse : before) {
            String str = morphParse.formatLong();
            if (morphParse.dictionaryItem.attributes.contains(RootAttribute.Runtime)) {
                str = str + " (Generated by UnidentifiedTokenParser)";
            }
            System.out.println(i + " - " + str);
            i++;
        }
    }

    public static void main(String[] args) throws IOException {

        AddNewDictionaryItem app = new AddNewDictionaryItem(TurkishWordParserGenerator.createWithDefaults());

        System.out.println("Proper Noun Test - 1 :");
        app.addNewDictionaryItemTest("Meydan'a",
                new DictionaryItem("Meydan", "meydan", "meydan", PrimaryPos.Noun, SecondaryPos.ProperNoun));
        System.out.println();

        System.out.println("Proper Noun Test - 2 :");
        app.addNewDictionaryItemTest("Meeeydan'a",
                new DictionaryItem("Meeeydan", "meeeydan", "meeeydan", PrimaryPos.Noun, SecondaryPos.ProperNoun));
        System.out.println();

        System.out.println("Verb Test : ");
        app.addNewDictionaryItemTest("tweetleyeyazdÄ±m",
                new DictionaryItem("tweetlemek", "tweetle", "tivitle", PrimaryPos.Verb, SecondaryPos.None));

    }
}
